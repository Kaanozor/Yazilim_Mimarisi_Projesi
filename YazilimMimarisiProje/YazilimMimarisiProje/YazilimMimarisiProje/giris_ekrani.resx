<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>